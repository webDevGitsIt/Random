#!/usr/bin/env bash

#### CSSNANO-MULTI ####
# Author: webDevGitsIt
# cssnano-multi is a wrapper script for cssnano, allowing multiple file and directory
# input. Intended to save some time from having to run the cssnano multiple times
# against individual files. I use it in my build process.
#
#### HOW TO USE ####
# Command
# cssnano-multi "<input>" "<optional output>"
#
# Default Behavior
# 	If you input multiple files/directories without providing any output all minified
# 	files will carry 'min.' prefix and will be output to the original's parent directory.
# 		cssnano-multi "file1.css file2.css"
#				//outputs min.file1.css & min.file2.css
#
# Custom Prefix
# 	You can provide a custom prefix in the output argument. To specify output directory
# 	prepend the prefix with a path.
# 		cssnano-multi "someFile.css" "foo/bar/myPrefix"
# 			//outputs myPrefix.someFile.css to foo/bar/
#
# Renaming files (Do not use with directory input)
# 	For each file you input you must include a corresponding new filename in output.
#		Renaming will only work when you have more than one input file, otherwise the
#		new name is treated as a prefix.
#			cssnano-multi "myFile.css anotherFile.css" "out/dir/thisFile.css diff/dir/anthrFile.css"
#				//outputs thisFile.css & anthrFile.css

# Directory input
# 	Include a directory path in the input argument. You can technically use
#		the renaming functionality with directory input, it is not recommended.
# 		cssnano-multi "dir/path" "foo/bar/myPrefix"

function minify () {
	if [[ "$1" == "PREFIX_DEFUALT" ]]; then
		for (( i=0; i<${#nf[@]}; i++ ))
		do
				cssnano "${nf[i]}" > "$(dirname "${nf[i]}")/min.$(basename "${nf[i]}")"
		done

	elif [[ "$1" == "PREFIX_SINGLE_MULTI" ]]; then
		for (( i=0; i<${#nf[@]}; i++ ))
		do
			cssnano "${nf[i]}" > "$(dirname "$minifiedFiles")/$(basename "$minifiedFiles").$(basename "${nf[i]}")"
		done

	elif [[ "$1" == "PREFIX_EACH" ]]; then
		for (( i=0; i<${#nf[@]}; i++ ))
		do
			cssnano "${nf[i]}" > "${nmf[i]}"
		done

	fi
}

function sanatizeInput () {
	replaceDir=
	for file in ${nf[*]};
	do
		if [[ -d "$file" ]]; then
			replaceDir+=$(find "${file}" -name "*.css")
			replaceDir+=" "
		else
			replaceDir+="${file} "
		fi
	done

	nf=( "$replaceDir" )
}

#START INIT
files=${1}
nf=( "$files" )
minifiedFiles=${2}
nmf=( "$minifiedFiles" )

if [[ -z "$files" ]]; then
	echo "No files provided."
	exit 1
else
	sanatizeInput
fi
#END INIT

if [[ -z "$minifiedFiles" ]]; then
	echo "No output file(s) provided. Minified files will have 'min.' prefix."

	minify "PREFIX_DEFUALT"

elif [[ ${#nmf[@]} == 1 ]]; then
	echo "File(s) will carry prefix with: $(basename "$minifiedFiles")"

	minify "PREFIX_SINGLE_MULTI"

else
	if [[ ${#nf[@]} != "${#nmf[@]}" ]]; then
		echo "cssnano-multi:rename - Each file provided must have corresponding file in output argument."
		exit 1;
	fi

	minify "PREFIX_EACH"

fi

exit 0
